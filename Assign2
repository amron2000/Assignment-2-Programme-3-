/////////////////////////////////////////////////////// Q1 //////////////////////////////////////////////////////////////////////////
package sample;

import com.sun.xml.internal.ws.api.model.wsdl.WSDLOutput;
import javafx.application.Application;
import javafx.collections.ObservableList;
import javafx.fxml.FXMLLoader;
import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Alert;
import javafx.scene.control.Button;
import javafx.scene.control.ListView;
import javafx.scene.control.SelectionMode;
import javafx.scene.layout.BorderPane;
import javafx.scene.layout.HBox;
import javafx.scene.layout.StackPane;
import javafx.scene.layout.VBox;
import javafx.stage.Stage;
import org.w3c.dom.ls.LSOutput;


public class Main extends Application {

    ListView<String> listView;
    ListView<String> listView2;

    @Override
    public void start(Stage window) throws Exception {
        window.setTitle("multiple-selection List");

        listView = new ListView<>();
        listView.getItems().addAll("Blue", "Red", "gray", "Black", "White");
        listView.getSelectionModel().setSelectionMode(SelectionMode.MULTIPLE);

        VBox vbox1 = new VBox();
        vbox1.setPadding(new Insets(20, 20, 20, 10));
        listView.setPrefWidth(95);
        listView.setPrefHeight(250);
        vbox1.getChildren().addAll(listView);
        //
        // Second ListView
        //
        listView2 = new ListView<>();
        listView2.getItems().addAll();

        VBox vbox2 = new VBox();
        vbox2.setPadding(new Insets(20, 10, 20, 20));
        listView2.setPrefWidth(95);
        listView2.setPrefHeight(250);
        vbox2.getChildren().addAll(listView2);

        Button button = new Button("Click");
        button.setStyle("-fx-font-size:12");
        button.setOnAction(event -> buttonclicked());
        button.setPrefSize(150, 30);

        BorderPane border = new BorderPane();
        border.setLeft(vbox1);
        border.setRight(vbox2);
        border.setCenter(button);

        window.setScene(new Scene(border, 300, 275));
        window.show();
    }




    private void buttonclicked(){
        String selectedItem = listView.getSelectionModel().getSelectedItem();
        if (selectedItem == null ){
            Alert n = new Alert(Alert.AlertType.WARNING);
            n.setHeaderText("No item selections");
            n.show();
        }else{
            //listView2.getItems().addAll(selectedItem);
        listView2.getItems().addAll(listView.getSelectionModel().getSelectedItems());
        listView.getSelectionModel().clearSelection();
        }

    }


    public static void main(String[] args) { launch(args); }
}
///////////////////////////////////////////////////////// Q2 /////////////////////////////////////////////////////////////////////////
package sample;

import javafx.application.Application;
import javafx.fxml.FXMLLoader;
import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Label;
import javafx.scene.control.RadioButton;
import javafx.scene.control.TextField;
import javafx.scene.control.ToggleGroup;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.HBox;
import javafx.scene.layout.VBox;
import javafx.stage.Stage;

public class Main extends Application {

    @Override
    public void start(Stage window) throws Exception{
        window.setTitle("Hello World");

        // Text label
        Label textLabel = new Label("Enter Celsius temperature:");
        textLabel.setPadding(new Insets(30,10,10,85));
        textLabel.setAlignment(Pos.CENTER);
        // Input label
        TextField text = new TextField();


        // Radio buttons
        Label result = new Label();
        RadioButton radio1 = new RadioButton();
        radio1.setText("Fahrenheit");
        radio1.setOnAction(event -> {

             double value = Double.parseDouble(text.getText());
            result.setText("New Tem is "+( value* 9/5 + 32));
            result.setPadding(new Insets(0,0,10,75));

        });
        //
        RadioButton radio2 = new RadioButton();
        radio2.setText("Kelvin");
        radio2.setPadding(new Insets(10,10,10,10));
        radio2.setOnAction(event -> {

            double value = Double.parseDouble(text.getText());
            result.setText("New Tem is "+ (value + 273.15));
            result.setPadding(new Insets(0,0,10,75));

        });
        //
        ToggleGroup group = new ToggleGroup();
        radio1.setToggleGroup(group);
        radio2.setToggleGroup(group);

        // GridPane
        GridPane grid = new GridPane();
        grid.setPadding(new Insets(10,10,10,50));
        GridPane.setConstraints(radio1, 0, 0);
        GridPane.setConstraints(radio2, 1, 0);
        grid.getChildren().addAll(radio1,radio2);




         // VBox Layout
         VBox vbox = new VBox(2,textLabel,text,grid,result);

        window.setScene(new Scene(vbox, 300, 275));
        window.show();
    }


    public static void main(String[] args) {
        launch(args);
    }
}
////////////////////////////////////////////////////////// Q3 ////////////////////////////////////////////////////////////////////////
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sample;

import java.io.File;
import java.io.FileNotFoundException;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;

import javafx.application.Application;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.scene.Scene;
import javafx.scene.control.*;
import javafx.scene.layout.StackPane;
import javafx.scene.layout.VBox;
import javafx.stage.FileChooser;
import javafx.stage.Stage;

/**
 * @author LapCity
 */
public class Main extends Application {
    TextArea ar;
    @Override

    public void start(Stage primaryStage) {
        Evnt event = new Evnt();
        MenuBar bar = new MenuBar();

        Menu f = new Menu("File");
        MenuItem open = new MenuItem("open");
        MenuItem close = new MenuItem("close");
        MenuItem Exit = new MenuItem("Exit");
        f.getItems().setAll(open, close, Exit);
        Menu ed = new Menu("Edit");
        MenuItem Font = new MenuItem("Font");
        MenuItem color = new MenuItem("Color");
        ed.getItems().addAll(Font, color);
        bar.getMenus().addAll(f);
        bar.getMenus().add(ed);
        open.setOnAction(event);
        close.setOnAction(event);
        Exit.setOnAction(event);
        Font.setOnAction(event);
        color.setOnAction(event);
        ar = new TextArea();
        VBox box = new VBox(bar, ar);

        Scene scene = new Scene(box, 300, 250);

        primaryStage.setTitle("Hello World!");
        primaryStage.setScene(scene);
        primaryStage.show();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        launch(args);
    }

    private class Evnt implements EventHandler<ActionEvent> {

        @Override
        public void handle(ActionEvent event) {
            String menu = ((MenuItem) event.getSource()).getText();
            switch (menu) {
                case "open":
                    FileChooser fc = new FileChooser();
                    fc.setTitle("open File");
                    fc.setInitialDirectory(new File("."));
                    File select = fc.showOpenDialog(null);
                {
                    Scanner s;
                    ar.setText("");
                    ar.setWrapText(true);
                    try {
                        s = new Scanner(select);
                        while (s.hasNextLine()) {
                            ar.appendText(s.nextLine());

                        }
                    } catch (FileNotFoundException ex) {
                        Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }

                break;

                case "close":
                    ar.clear();
                    break;
                case "Exit":
                    System.exit(1);
                    break;
                case "Font":
                    Dialog<String> dialogFont = new ChoiceDialog<>("8", "10", "12", "14", "16", "18", "20", "22", "24", "26", "30", "35", "40");
                    dialogFont.setHeaderText("Select the size of the Font from list");
                    dialogFont.setContentText("Available Sizes");
                    dialogFont.setTitle("Size Selection");
                    String font = dialogFont.showAndWait().get();
                    ar.setStyle("-fx-font-size: " + font + "px;");
                    break;
                case "Color":
                    Alert d = new Alert(Alert.AlertType.CONFIRMATION);
                    ColorPicker color = new ColorPicker();
                    d.setGraphic(color);
                    d.showAndWait();
                    String c = color.getValue().toString();
                    String clor = c.substring(2);
                    ar.setStyle("-fx-text-fill:#" + clor + ";");

                    break;

            }
        }

    }

}
////////////////////////////////////////////////////////////// Q4 /////////////////////////////////////////////////////////////////////
package sample;

import javafx.application.Application;
import javafx.event.ActionEvent;
import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.PasswordField;
import javafx.scene.control.TextField;
import javafx.scene.layout.*;
import javafx.stage.Stage;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.Scanner;


public class Main extends Application {


    public void start(Stage window) throws IOException, FileNotFoundException {
        GridPane grid = new GridPane();
        grid.setPadding(new Insets(25, 20, 10, 30));
        grid.setHgap(0);
        grid.setVgap(5);

        // Welcome Label
        Label welcome = new Label("Welcome");
        welcome.setId("Welcome");
        grid.add(welcome, 0, 0);

        // Label Username
        Label textLabel = new Label("User Name:");
        textLabel.setId("label");
        grid.add(textLabel, 0, 1);
        // Input Username
        TextField Userinput = new TextField();

        HBox hbox1 = new HBox(Userinput);
        grid.add(hbox1, 1, 1);
        // Label Password
        Label PassLabel = new Label("Password:");
        PassLabel.setId("label");
        grid.add(PassLabel, 0, 2);
        // Input Password
        PasswordField passwordField = new PasswordField();
        passwordField.setPromptText("Your password");
        HBox hbox2 = new HBox(passwordField);
        grid.add(hbox2, 1, 2);
        // Buttons
        Button button1 = new Button("Sign up");
        Label label = new Label("");
        grid.add(label, 1, 8);
//////////////////////////////// Log in ///////////////////////////////////
        String filepath = "password.txt";
        File file = new File(filepath);
        file.createNewFile();
        Scanner scanner = new Scanner(file);
         /*        Acounts is amro amron123
                   khaled amron123
                   amron2000 amron123
         */
        button1.setOnAction(event -> {
            while (scanner.hasNextLine()) {
                String line = scanner.nextLine();
                if (line.contains(Userinput.getText()) && line.contains(getMd5(passwordField.getText()))) {
///////////////////////////////////// Scene 2 /////////////////////////////////////
                    Button button3 = new Button("Add Student");
                    button3.setId("Buttons");
                    Button button4 = new Button("View Student");
                    button4.setId("Buttons");
                    VBox vbox = new VBox(10, button3, button4);
                    vbox.setAlignment(Pos.CENTER);
                    Scene scene2 = new Scene(vbox, 320, 270);
                    scene2.getStylesheets().add("Css.css");
                    vbox.setId("BackGround");
                    window.setScene(scene2);
///////////////////////////////////////////////////////////////////////////////////

                } else if (Userinput.getText().isEmpty() || passwordField.getText().isEmpty()) {
                    label.setText("User name or Password is empty");
                    label.setId("login");
                } else if (!Userinput.getText().equals("mah") || !passwordField.getText().equals("123")) {
                    label.setText("User name or Password wrong");
                    label.setId("login");
                }
            }
        });
        Button button2 = new Button("Exit");
        button2.setOnAction(event -> {
            System.exit(0);
        });
        button1.setId("Buttons");
        button2.setId("Buttons");
        HBox hbox3 = new HBox(8, button1, button2);
        hbox3.setPadding(new Insets(0, 0, 0, 48));
        grid.add(hbox3, 1, 6);

        grid.setId("BackGround");
        Scene scene = new Scene(grid, 320, 270);
        scene.getStylesheets().add("Css.css");
        window.setTitle("Hello World");
        window.setScene(scene);
        window.show();
    }

    public static void main(String[] args) {
        launch(args);
    }

    public static String getMd5(String input) {
        try {
            MessageDigest md = MessageDigest.getInstance("MD5");
            byte[] messageDigest = md.digest(input.getBytes());
            BigInteger no = new BigInteger(1, messageDigest);
            String hashtext = no.toString(16);
            while (hashtext.length() < 32) {
                hashtext = "0" + hashtext;
            }
            return hashtext;
        } catch (NoSuchAlgorithmException e) {
            throw new RuntimeException(e);
        }
    }
}
